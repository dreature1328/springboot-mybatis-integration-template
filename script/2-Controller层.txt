
	@Autowired
	private DataService dataService;
  
  	// 依次查询
	@RequestMapping("/data/select")
	public HTTPResult selectData(String id) throws Exception {
		return HTTPResult.success(dataService.selectData(id));
	}

	// 批量查询
	@RequestMapping("/data/bselect")
	public HTTPResult batchSelectData(String ids) throws Exception {
		List<String> idList = Arrays.asList(ids.split(","));
		return HTTPResult.success(dataService.batchSelectData(idList));
	}

	// 分页查询
	@RequestMapping("/data/pselect")
	public HTTPResult pageSelectData(String ids) throws Exception {
		List<String> idList = Arrays.asList(ids.split(","));
		return HTTPResult.success(dataService.batchSelectData(idList));
	}
  
  	// 生成请求参数
	@RequestMapping("/data/params")
	public HTTPResult generateDataParams() {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
		return HTTPResult.success(paramsList);
	}
 
 	// 依次同步请求
	@RequestMapping("/data/request")
	public HTTPResult requestData() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        List<String> responses = dataService.requestData(paramsList);
		return HTTPResult.success(responses);
	}
 
 	// 批量异步请求
	@RequestMapping("/data/brequest")
	public HTTPResult batchRequestData() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        List<String> responses = dataService.batchRequestData(paramsList);
		return HTTPResult.success(responses);
	}
 
 	// 分页异步请求
	@RequestMapping("/data/prequest")
	public HTTPResult pageRequestData() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        List<String> responses = dataService.pageRequestData(paramsList);
		return HTTPResult.success(responses);
	}
 
 	// 传统加工
	@RequestMapping("/data/process")
	public HTTPResult processData() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        List<String> responses = dataService.requestData(paramsList);
        List<Data> dataList = dataService.processData(responses);
		return HTTPResult.success(dataList);
	}
 
  	// 流水线加工
	@RequestMapping("/data/pprocess")
	public HTTPResult pipelineProcessData() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        List<String> responses = dataService.pageRequestData(paramsList);
        List<Data> dataList = dataService.pielineProcessData(responses);
		return HTTPResult.success(dataList);
	}
 
    // 集成
    @RequestMapping("/data/integrate")
    public HTTPResult integrateData() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        dataService.integrateData(paramsList);
        return HTTPResult.success(null);
    }

    // 优化集成
    @RequestMapping("/data/integratex")
    public HTTPResult integrateDataOptimized() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        dataService.integrateDataOptimized(paramsList);
        return HTTPResult.success(null);
    }
    
    // 分页优化集成
    @RequestMapping("/data/pintegratex")
    public HTTPResult pageIntegrateDataOptimized() throws Exception {
        List<Map<String, String>> paramsList = dataService.generateDataParams();
        dataService.pageIntegrateDataOptimized(paramsList);
        return HTTPResult.success(null);
    }
